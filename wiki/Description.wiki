#labels Featured,Phase-Deploy
What are slow HTTP attacks and how this tool helps you fighting with it
== Introduction ==

Slow HTTP attacks rely on the fact that the HTTP protocol, by design, requires requests to be completely received by the server before they are processed. If an HTTP request is not complete, or if the transfer rate is very low, the server keeps its resources busy waiting for the rest of the data. If the server keeps too many resources busy, this creates a denial of service. 
This tool is sending partial HTTP requests, trying to get denial of service from target HTTP server.


== Details ==

Due to implementation differences among various HTTP servers, two main attack vectors exist:

  * slowing down HTTP headers;
  * slowing down HTTP message body;

slowhhtptest tool accepts the following arguments: 
  * -c: maximum number of connections tool would try to establish
  * -h or -b: specifies which part of HTTP request, headers or message body body you want to slow down.
  * -i: interval in seconds between slowed down data chunks. Should be less than connection timeout on the server
  * -l: length of test is seconds, if server doesn't close all connections first
  * -r: connection rate(connections per second), to bypass throttling down mechanisms, if any
  * -s: value of Content-Length header for POST requests, servers tend to limit message body
  * -t: HTTP verb to use in request. Default to GET for -h, POST for -b
  * -u: full URL to request, e.g. https://127.0.0.1:8888/foo/index.php
  * -v: verbosity level 0-4. 0 - minimum information, 4 - everything including debug information
  * -x: maximum length of random followup data. E.g. every interval specified by -i, header or body data would be generated. Both name and value of header or message body are random US-ASCII characters.


slowhttptest tool supports 
  * SSL connections(URLs starting with 'https://')
  * host names resolved to IPv6
  * will try to change the limit for max open file descriptors for current process if requested number of connections is greater than current limit

== Usage example ==
./slowhttptest -c 800 -b -i 10 -l 300 -r 100 -s 8192 -t TRACE -u http://127.0.0.1/ -v 1 -x 256

== Installation == 

  * download the tarball from [http://code.google.com/p/slowhttptest/downloads/list Downloads section]
  * unpack
  * ./configure && make && make install